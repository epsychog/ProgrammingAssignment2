install.packages("car")
install.packages("car")
install.packages("car")
libary(car)
library(car)
install.packages("car")
library(car)
help("Deprecated")
library(car)
library(car)
search()
?data.frame
?c
numbers=c(1:10)
numbers
?data.frame
numbers=c(1:10)
words=c(:"One", "Two", "Three", "Four", "Five", "Six", "Seven", "Eight", "Nine", "Ten")
nw= data.frame(numbers,words)
mw
numbers=c(1:10)
words=c("One", "Two", "Three", "Four", "Five", "Six", "Seven", "Eight", "Nine", "Ten")
nw= data.frame(numbers,words)
nw
attributes(nw)
nw(8,1)
nw[8,1]
nw[8,2]
nw[8,2]
nw
nw[8,1]
nw[1,2]
a=matrix(1:10,2,5)
a
?cbind
x=1:6
y=5:10
cbind(x,y) # by column
rbind(x,y) # by row
x=c(1:6)
y=c(5:10)
m=cbind(x,y)
m
install.packages("car")
search()
setwd("C:\\epsychog\\Trainings & Events\\Data Science\\Statistics One\\Labs")
install.packages(“psych”)
getwd()
install.packages("swirl")
exit
install.packages("swirl")
library(swirl)  # Loads swirl
swirl()  # Runs swirl
swirl()
swirl()
library (swirl)
swirl()
install_from_swirl("Course_Directory")
install.packages("httr")
install.packages("httr")
install.packages("httr")
library(devtools)
library(httr)
set_config(use_prox(url="http://wpad/wpad.dat",port=8080,username="XXX",password="XXX"))
install.packages("devtools")
library(devtools)
set_config(use_prox(url="http://wpad/wpad.dat",port=8080,username="XXX",password="XXX"))
set_config(use_proxy(url="http://wpad/wpad.dat",port=8080,username="XXX",password="XXX"))
swirl()
library(swirl)
swirl()
swirl()
libary(swirl)
library(swirl)
swirl()
5+7
x<-5+7
x
y<-x-3
y
z<-c(1.1, 9, 3.14)
?c
z
c(z,555,z)
z*2+100
sqrt(z-1)
mySqrt <- sqrt(z-1)
mySqrt
myDic <- z/mySqrt
myDiv <- z/mySqrt
myDiv
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10,by=0.5)
my_seq <- seq(5,10,length=30)
length(my_seq)
seq(1:length(my_seq))
1:length(my_seq)
seq(along=my_seq)
seq_along(my_seq)
rep(0,time=40)
rep(0,times=40)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=10)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >=6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse=" ")
my_name <- c(my_char,"Effi")
my_name
paste(my_name, collapse=" ")
paste("Hello","world",sep=" ")
paste("Hello","world!",sep=" ")
paste(1:3,c("X", "Y", "Z"), sep=" ")
paste(c(1,2,3),c("X", "Y", "Z"), sep=" ")
paste(1:3,c("X", "Y", "Z"), sep="")
paster(LETTERS, 1:4, sep="-")
paste(LETTERS, 1:4, sep="-")
x<-c(44,NA,5,NA)
x*3
y <- rnorm(1000)
z <- rep(NA, 1000)
myData<-sample(c(y,z),100)
is.na(myData)
myNA<-is.na(myData)
myNA
myData == NA
sum(myNA)
myData
0/0
Inf-Inf
x
x[1:10]
x[in.na(x)]
x[is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x)&x>0]
c(x[3],x[5],x[7])
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect<-c(foo=11,bar=2,norf=NA)
vect
names(vect)
vect2<-c(11,2,NA)
names(vect2)<- c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo", "bar")]
myVector<-1:20
myVector
dim(myVector)
length(myVector)
dim(myVector) <- c(4,5)
dim(myVector)
attributes(myVector)
myVector
class(myVector)
myMatrix <- myVector
?matrix
myMatrix2 <- matrix(1:20,nrow=4,ncol=5)
identical(myMatrix,myMatrix2)
patients <- c("Bill","Gina","Kelly","Sean")
cbind(patients,myMatrix)
myData <- data.frame(patients,myMatrix)
myData
class(myData)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(myData) <- cnames
myData
bye()
install.packages("KernSmooth")
library(KernSmooth)
find.package("devtools")
install.packages("devtools")
library(devtools)
find.package("devtools")
install.packages("slidify")
install.packages("ffplot")
install.packages("ggplot2")
find_rtools()
library(BiocInstaller)
bicvalid()
biocvalid()
biocValid()
biocLite()
biocLite("rhdf5")
con <- url("http://scholar.google.com/citations?user=HI-I6C0AAAAJ&h=en")
htmlCode = readLines(con)
close(con)
htmlCode
library(httr)
?sqldf
R.home()
setwd('C:\\epsychog\\Trainings & Events\\Data Science\\Data Science Specialisation (coursera)\\2. R Programming\\Exercises\\ProgrammingAssignment2')
source("cachematrix.R")
mat <- matrix(1:4, nrow=2,ncol=2,byrow=TRUE)
cacheSolve(makeCacheMatrix(mat))
cacheSolve(makeCacheMatrix(mat))
inv
inv <- matrix(c(-2.0,1.0,1.5,-0.5),ncol=2,nrow=2,byrow=TRUE)
inv
